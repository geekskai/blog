import type { CopyStatus, ConversionResult } from "../types"
import { formatCurrency, getCurrencySymbol } from "./currency"

/**
 * Copy text to clipboard
 */
export async function copyToClipboard(text: string): Promise<boolean> {
  try {
    // Use modern Clipboard API if available
    if (navigator.clipboard && window.isSecureContext) {
      await navigator.clipboard.writeText(text)
      return true
    }

    // Fallback to legacy method
    return fallbackCopyToClipboard(text)
  } catch (error) {
    console.warn("Failed to copy to clipboard:", error)
    return false
  }
}

/**
 * Legacy clipboard copy method (fallback)
 */
function fallbackCopyToClipboard(text: string): boolean {
  try {
    const textArea = document.createElement("textarea")
    textArea.value = text
    textArea.style.position = "fixed"
    textArea.style.left = "-999999px"
    textArea.style.top = "-999999px"

    document.body.appendChild(textArea)
    textArea.focus()
    textArea.select()

    const successful = document.execCommand("copy")
    document.body.removeChild(textArea)

    return successful
  } catch (error) {
    console.warn("Fallback copy failed:", error)
    return false
  }
}

/**
 * Format conversion result for copying
 */
export function formatCopyText(result: ConversionResult): string {
  const inputFormatted = formatCurrency(result.input, result.inputCurrency)
  const outputFormatted = formatCurrency(result.output, result.outputCurrency)

  return `${inputFormatted} = ${outputFormatted} (Rate: ${result.exchangeRate})`
}

/**
 * Format detailed conversion info for copying
 */
export function formatDetailedCopyText(result: ConversionResult): string {
  const inputFormatted = formatCurrency(result.input, result.inputCurrency)
  const outputFormatted = formatCurrency(result.output, result.outputCurrency)
  const inputSymbol = getCurrencySymbol(result.inputCurrency)
  const outputSymbol = getCurrencySymbol(result.outputCurrency)

  return `Currency Conversion:
${inputFormatted} = ${outputFormatted}
Exchange Rate: 1 ${result.inputCurrency} = ${result.exchangeRate} ${result.outputCurrency}
Last Updated: ${result.lastUpdated}
Generated by GeeksKai Currency Converter`
}

/**
 * Create copy status manager utility
 */
export function createCopyStatusManager() {
  let timeoutId: NodeJS.Timeout | null = null

  return {
    setCopyStatus: (
      status: CopyStatus,
      callback: (status: CopyStatus) => void,
      resetDelay: number = 2000
    ) => {
      callback(status)

      // Clear previous timeout
      if (timeoutId) {
        clearTimeout(timeoutId)
      }

      // Auto-reset for success/error states
      if (status === "copied" || status === "error") {
        timeoutId = setTimeout(() => {
          callback("idle")
          timeoutId = null
        }, resetDelay)
      }
    },

    cleanup: () => {
      if (timeoutId) {
        clearTimeout(timeoutId)
        timeoutId = null
      }
    },
  }
}

/**
 * Generate shareable conversion link
 */
export function generateShareableLink(
  amount: number,
  fromCurrency: string,
  toCurrency: string
): string {
  const baseUrl = typeof window !== "undefined" ? window.location.origin : "https://geekskai.com"
  const params = new URLSearchParams({
    amount: amount.toString(),
    from: fromCurrency,
    to: toCurrency,
  })

  return `${baseUrl}/tools/pund-til-nok-kalkulator?${params.toString()}`
}

/**
 * Format conversion for social sharing
 */
export function formatSocialShareText(result: ConversionResult): string {
  const inputFormatted = formatCurrency(result.input, result.inputCurrency)
  const outputFormatted = formatCurrency(result.output, result.outputCurrency)

  return `ðŸ’± ${inputFormatted} = ${outputFormatted} | Live GBP â†” NOK Exchange Rate | Convert currencies instantly at GeeksKai.com`
}
